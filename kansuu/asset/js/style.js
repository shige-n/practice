/*
   関数宣言
   function hoge(){
    // ここに処理
  };

  関数式
   var hoge = function(){
       // ここに処理
   };

   関数式の記述方法
   『function(){}』という無名の関数を代入して関数を定義する。
   この『function(){}』が『無名関数』と呼ばれる部分

   関数式での関数の定義は代入処理が行われた時に初めて定義される
   →巻き上げ処理は行われない
   →エラーが起こりにくい
*/

//無名関数の処理の順番 上から下へ流れる
//関数の有り無しで処理の順番が変わることはない
console.info('開始');
(function() {
  console.info('無名関数内の処理');
})();
console.info('終了');

//////////////

//無名関数のスコープ(動作の対象)範囲
var a = 'a';

(function() {
  var b = 'b';
  console.info(a);
  console.info(b);
})();
console.info(a);
//関数内で定義した変数のスコープ範囲は関数内のみの為エラー
console.info(b);

//グローバル変数で「a」「b」を定義し、
//無名関数内で同名のローカル変数を定義することも可能。
//この方法を使用すれば、無名関数内での定義が他のスクリプトに影響を及ぼすことが無い。

//////////////

//無名関数に引数を指定する方法
//無名関数には、以下の様に引数を指定することも出来る。
var a = 'a';
var b = 'b';

(function(a, b) {
    console.info(a);
    console.info(b);
})(a, b);

//////////////

/*
  無名関数のメリット
  1.スコープ範囲の限定化により、変数・関数の重複を避けられる
  2.名前を付ける必要がないため、名称を考える手間が要ら無い
  3.コードのブロック化が出来るため、別の処理にそのまま組み込むことが可能
*/
